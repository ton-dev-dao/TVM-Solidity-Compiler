.fragment __appendBytes1, {
	.loc stdlib.sol, 106
	OVER
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 107
		NEWC
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 108
	SWAP
	UNPAIR
	ROTREV
	STU 8
	SWAP
	PAIR
	.loc stdlib.sol, 0
}

.fragment __parseInteger, {
	.loc stdlib.sol, 72
	OVER
	PUSHCONT {
		.loc stdlib.sol, 73
		PUSHINT 0
		NULL
		PAIR
		BLKDROP2 2, 1
		PUSHINT 1
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 75
	NULL
	.loc stdlib.sol, 76
	PUSHINT 0
	.loc stdlib.sol, 77
	PUSHCONT {
		PUSH S3
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 79
		OVER2
		DIVMOD
		POP S5
		XCPU S4, S2
		.loc stdlib.sol, 80
		PAIR
		POP S2
		.loc stdlib.sol, 81
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 83
	BLKDROP2 2, 2
	.loc stdlib.sol, 0
}

.fragment __convertIntToHexString, {
	.loc stdlib.sol, 280
	PUSH S3
	LESSINT 0
	.loc stdlib.sol, 281
	ROLL 4
	ABS
	.loc stdlib.sol, 282
	PUSH S5
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 284
	ROT
	PUSHCONT {
		.loc stdlib.sol, 285
		DUP
		PUSHCONT {
			.loc stdlib.sol, 286
			NEWC
			PUSH S6
			PAIR
			POP S6
			.loc stdlib.sol, 287
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 289
		PUSH S5
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 290
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 293
	SWAP
	PUSHINT 16
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 295
	PUSH2 S5, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 296
		PUSH S4
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 297
		PUSH2 S6, S1
		SUB
		.loc stdlib.sol, 298
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 299
			PUSH S8
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S9
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 301
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 302
			NEWC
			PUSH S9
			PAIR
			POP S9
			.loc stdlib.sol, 303
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 304
				PUSH S8
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S9
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 306
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 308
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 312
	ROLL 3
	PUSHINT 97
	PUSHINT 65
	CONDSEL
	ADDCONST -10
	.loc stdlib.sol, 313
	PUSH2 S1, S3
	MIN
	PUSHCONT {
		.loc stdlib.sol, 315
		PUSH2 S2, S2
		ISNULL
		THROWIF 63
		UNPAIR
		POP S4
		.loc stdlib.sol, 316
		PUSH S7
		UNPAIR
		XCPU S2, S0
		LESSINT 10
		PUSHINT 48
		PUSH S5
		CONDSEL
		ADD
		STUR 8
		SWAP
		PAIR
		POP S7
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 318
	PUSH2 S1, S3
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 319
		NEWC
		PUSH S7
		PAIR
		POP S7
		.loc stdlib.sol, 320
		PUSH2 S1, S3
		SUB
		PUSHCONT {
			.loc stdlib.sol, 322
			PUSH2 S2, S2
			ISNULL
			THROWIF 63
			UNPAIR
			POP S4
			.loc stdlib.sol, 323
			PUSH S7
			UNPAIR
			XCPU S2, S0
			LESSINT 10
			PUSHINT 48
			PUSH S5
			CONDSEL
			ADD
			STUR 8
			SWAP
			PAIR
			POP S7
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 326
	BLKDROP 6
	.loc stdlib.sol, 0
}

.fragment __appendSliceDataAsHex, {
	.loc stdlib.sol, 122
	PUSHCONT {
		DUP
		SBITS
		GTINT 3
	}
	PUSHCONT {
		.loc stdlib.sol, 123
		DUP
		SBITS
		RSHIFT 2
		MULCONST 4
		PUSHPOW2 8
		MIN
		UFITS 9
		.loc stdlib.sol, 124
		DUP2
		LDUX
		POP S3
		PUXC2 S3, S-1, S0
		.loc stdlib.sol, 125
		RSHIFT 2
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 127
	DUP
	SBITS
	PUSHCONT {
		.loc stdlib.sol, 128
		PUSHINT 4
		OVER
		SBITS
		SUB
		.loc stdlib.sol, 129
		PUSH2 S1, S1
		SBITS
		UFITS 9
		LDUX
		POP S3
		.loc stdlib.sol, 130
		LSHIFT 1
		INC
		.loc stdlib.sol, 131
		SWAP
		DEC
		LSHIFT
		.loc stdlib.sol, 132
		PUXC S2, S-1
		PUSHINT 1
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		.loc stdlib.sol, 133
		PUSHINT 95
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 135
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendAnyCast, {
	.loc stdlib.sol, 231
	LDI 1
	SWAP
	.loc stdlib.sol, 232
	PUSHCONT {
		.loc stdlib.sol, 233
		LDU 5
		PU2XC S2, S-1, S1
		.loc stdlib.sol, 234
		LDSLICEX
		POP S3
		CALLREF {
			.inline __appendSliceDataAsHex
		}
		.loc stdlib.sol, 235
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 0
}

.fragment __appendBytes1NTimes, {
	.loc stdlib.sol, 114
	PUSHCONT {
		.loc stdlib.sol, 115
		DUP2
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 117
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendSliceToStringBuilder, {
	.loc stdlib.sol, 139
	OVER
	FIRST
	BREMBITS
	ADDCONST -7
	.loc stdlib.sol, 140
	PUXCPU S1, S-1, S0
	SBITS
	MIN
	LDSLICEX
	POP S2
	.loc stdlib.sol, 141
	PUSH S2
	UNPAIR
	ROTREV
	STSLICE
	SWAP
	PAIR
	POP S2
	.loc stdlib.sol, 142
	DUP
	SEMPTY
	PUSHCONT {
		.loc stdlib.sol, 144
		DUP
		NEWC
		STSLICE
		.loc stdlib.sol, 145
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 147
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilderWithNoShift, {
	.loc stdlib.sol, 151
	DUP
	CTOS
	.loc stdlib.sol, 152
	PUSHCONT {
		.loc stdlib.sol, 153
		PUSH S2
		UNPAIR
		XCPU2 S1, S2, S2
		SBITS
		LDSLICEX
		POP S4
		STSLICER
		SWAP
		PAIR
		POP S3
		.loc stdlib.sol, 154
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 156
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 157
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 159
	DROP2
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilder, {
	.loc stdlib.sol, 163
	NULL
	.loc stdlib.sol, 164
	PUSH S2
	FIRST
	BBITS
	PUSHCONT {
		.loc stdlib.sol, 165
		ROTREV
		CALLREF {
			.inline __appendStringToStringBuilderWithNoShift
		}
		NIP
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 167
	OVER
	CTOS
	.loc stdlib.sol, 168
	PUSHCONT {
		.loc stdlib.sol, 169
		BLKPUSH 2, 0
		SBITS
		LDSLICEX
		POP S2
		PUXC S4, S-1
		.loc stdlib.sol, 170
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		POP S4
		.loc stdlib.sol, 171
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 173
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 175
	BLKDROP 3
	.loc stdlib.sol, 0
}

.fragment __createStringBuilder, {
	.loc stdlib.sol, 89
	NEWC
	NULL
	PAIR
	.loc stdlib.sol, 0
}

.fragment __makeString, {
	.loc stdlib.sol, 95
	UNPAIR
	SWAP
	.loc stdlib.sol, 96
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 97
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 98
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 101
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment __subCell, {
	.loc stdlib.sol, 390
	PUSH S2
	PUSHINT 127
	DIVMOD
	.loc stdlib.sol, 391
	OVER
	NEQINT 0
	OVER
	EQINT 0
	AND
	PUSHCONT {
		.loc stdlib.sol, 392
		DROP
		DEC
		.loc stdlib.sol, 393
		PUSHINT 127
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 396
	PUSH S5
	CTOS
	.loc stdlib.sol, 397
	PUSH S2
	PUSHCONT {
		.loc stdlib.sol, 398
		DUP
		SREFS
		EQINT 1
		THROWIFNOT 70
		.loc stdlib.sol, 399
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 402
	OVER
	MULCONST 8
	POP S2
	.loc stdlib.sol, 403
	DUP
	SBITS
	PUSH S2
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 404
	OVER
	SDSKIPFIRST
	.loc stdlib.sol, 406
	PUSH S4
	MULCONST 8
	POP S5
	.loc stdlib.sol, 407
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 408
	PUSHCONT {
		.loc stdlib.sol, 409
		OVER
		SBITS
		PUSH S6
		MIN
		UFITS 10
		.loc stdlib.sol, 410
		PUSH2 S6, S0
		SUB
		POP S7
		PUXC S2, S-1
		.loc stdlib.sol, 411
		LDSLICEX
		POP S3
		.loc stdlib.sol, 412
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		.loc stdlib.sol, 413
		PUSH S5
		EQINT 0
		PUSH S2
		SEMPTY
		OR
		IFRETALT
		.loc stdlib.sol, 416
		OVER
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 418
	BLKSWAP 2, 4
	SWAP
	EQINT 0
	OR
	THROWIFNOT 70
	.loc stdlib.sol, 419
	CALLREF {
		.inline __makeString
	}
	BLKDROP2 5, 1
	.loc stdlib.sol, 0
}

.fragment __arraySlice, {
	.loc stdlib.sol, 384
	DUP2
	LEQ
	THROWIFNOT 70
	.loc stdlib.sol, 385
	OVER
	SUB
	.loc stdlib.sol, 386
	FALSE
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment __concatenateStrings, {
	.loc stdlib.sol, 448
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 449
	ROT
	CALLREF {
		.inline __appendStringToStringBuilderWithNoShift
	}
	.loc stdlib.sol, 450
	SWAP
	CALLREF {
		.inline __appendStringToStringBuilder
	}
	.loc stdlib.sol, 451
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __convertIntToString, {
	.loc stdlib.sol, 181
	PUSH S2
	LESSINT 0
	.loc stdlib.sol, 182
	ROLL 3
	ABS
	.loc stdlib.sol, 183
	PUSH S4
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 185
	ROT
	PUSHCONT {
		.loc stdlib.sol, 186
		DUP
		PUSHCONT {
			.loc stdlib.sol, 187
			NEWC
			PUSH S5
			PAIR
			POP S5
			.loc stdlib.sol, 188
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 190
		PUSH S4
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S5
		.loc stdlib.sol, 191
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 194
	SWAP
	PUSHINT 10
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 196
	PUSH2 S4, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 197
		PUSH S3
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 198
		PUSH2 S5, S1
		SUB
		.loc stdlib.sol, 199
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 200
			PUSH S7
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S8
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 202
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 203
			NEWC
			PUSH S8
			PAIR
			POP S8
			.loc stdlib.sol, 204
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 205
				PUSH S7
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 207
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 209
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 213
	PUSH2 S0, S2
	MIN
	PUSHCONT {
		.loc stdlib.sol, 215
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 216
		PUSH S6
		UNPAIR
		XCHG S2
		ADDCONST 48
		STUR 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 218
	PUSH2 S0, S2
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 219
		NEWC
		PUSH S6
		PAIR
		POP S6
		PUSH2 S0, S2
		.loc stdlib.sol, 220
		SUB
		PUSHCONT {
			.loc stdlib.sol, 222
			OVER
			UNPAIR
			POP S3
			.loc stdlib.sol, 223
			PUSH S6
			UNPAIR
			XCHG S2
			ADDCONST 48
			STUR 8
			SWAP
			PAIR
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 227
	BLKDROP 5
	.loc stdlib.sol, 0
}

.fragment __convertAddressToHexString, {
	.loc stdlib.sol, 241
	LDU 2
	XCPU S1, S0
	.loc stdlib.sol, 242
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 243
		BLKPUSH 2, 2
		CALLREF {
			.inline __appendAnyCast
		}
		.loc stdlib.sol, 244
		LDI 8
		POP S4
		PUSHINT 0
		DUP
		CALLREF {
			.inline __convertIntToString
		}
		.loc stdlib.sol, 245
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		.loc stdlib.sol, 246
		PUSH S2
		LDU 256
		POP S4
		PUSHINT 64
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S3
	}
	PUSHCONT {
		DUP
		EQINT 1
		PUSHCONT {
			.loc stdlib.sol, 248
			PUSH S2
			PUSHINT 58
			CALLREF {
				.inline __appendBytes1
			}
			POP S3
			.loc stdlib.sol, 249
			OVER
			LDU 9
			XCPU2 S3, S4, S3
			BLKDROP2 2, 2
			.loc stdlib.sol, 250
			CALLREF {
				.inline __appendSliceDataAsHex
			}
			POP S3
		}
		PUSHCONT {
			DUP
			EQINT 3
			PUSHCONT {
				.loc stdlib.sol, 252
				BLKPUSH 2, 2
				CALLREF {
					.inline __appendAnyCast
				}
				SWAP
				POP S4
				.loc stdlib.sol, 253
				PUSHINT 9
				SDSKIPFIRST
				POP S2
				BLKPUSH 2, 2
				.loc stdlib.sol, 254
				LDI 32
				POP S4
				PUSHINT 0
				DUP
				CALLREF {
					.inline __convertIntToString
				}
				.loc stdlib.sol, 255
				PUSHINT 58
				CALLREF {
					.inline __appendBytes1
				}
				.loc stdlib.sol, 256
				PUSH S2
				CALLREF {
					.inline __appendSliceDataAsHex
				}
				POP S3
				.loc stdlib.sol, 0
			}
			IF
		}
		IFELSE
	}
	IFELSE
	.loc stdlib.sol, 258
	DROP2
	.loc stdlib.sol, 0
}

.fragment __convertBoolToStringBuilder, {
	.loc stdlib.sol, 330
	PUSHCONT {
		PUSHREF {
			.blob x74727565
		}
		CTOS
	}
	PUSHCONT {
		PUSHREF {
			.blob x66616c7365
		}
		CTOS
	}
	IFELSE
	CALLREF {
		.inline __appendSliceToStringBuilder
	}
	.loc stdlib.sol, 0
}

.fragment __convertFixedPointToString, {
	.loc stdlib.sol, 262
	PUSH S2
	LESSINT 0
	PUSHCONT {
		.loc stdlib.sol, 263
		PUSH S3
		FIRST
		BREMBITS
		LESSINT 8
		PUSHCONT {
			.loc stdlib.sol, 264
			NEWC
			PUSH S4
			PAIR
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 266
		PUSH S3
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 268
	ROT
	ABS
	SWAP
	DIVMOD
	.loc stdlib.sol, 269
	PUXC S3, S1
	PUSHINT 0
	DUP
	CALLREF {
		.inline __convertIntToString
	}
	POP S3
	.loc stdlib.sol, 270
	PUSH S2
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 271
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 273
	PUSH S2
	UNPAIR
	PUSHINT 46
	ROT
	STU 8
	SWAP
	PAIR
	POP S3
	SWAP
	.loc stdlib.sol, 274
	TRUE
	CALLREF {
		.inline __convertIntToString
	}
	.loc stdlib.sol, 0
}

.fragment __gasGasPrice, {
	.loc stdlib.sol, 36
	PUSHINT 20
	PUSHINT 21
	CONDSEL
	CONFIGOPTPARAM
	.loc stdlib.sol, 37
	DUP
	ISNULL
	THROWIF 68
	.loc stdlib.sol, 38
	DUP
	ISNULL
	THROWIF 63
	CTOS
	.loc stdlib.sol, 39
	LDU 8
	LDU 64
	LDU 64
	LDU 8
	PLDU 64
	BLKDROP2 4, 1
	.loc stdlib.sol, 0
}

.fragment __gasToTon, {
	.loc stdlib.sol, 32
	CALLREF {
		.inline __gasGasPrice
	}
	PUSHPOW2 16
	MULDIVC
	.loc stdlib.sol, 0
}

.fragment __stackReverse, {
	.loc stdlib.sol, 643
	NULL
	.loc stdlib.sol, 644
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 645
		OVER
		UNPAIR
		POP S3
		SWAP
		PAIR
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 646
	NIP
	.loc stdlib.sol, 0
}

.fragment __stackSort, {
	.loc stdlib.sol, 601
	OVER
	ISNULL
	PUSHCONT {
		.loc stdlib.sol, 602
		DROP2
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 605
	NULL
	.loc stdlib.sol, 606
	PUSHINT 0
	.loc stdlib.sol, 607
	PUSHCONT {
		PUSH S3
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 609
		PUSH S3
		UNPAIR
		POP S5
		NULL
		PAIR
		.loc stdlib.sol, 610
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 607
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 613
	PUSHCONT {
		DUP
		GTINT 1
	}
	PUSHCONT {
		.loc stdlib.sol, 614
		NULL
		.loc stdlib.sol, 615
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 616
			PUSH S2
			UNPAIR
			POP S4
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 617
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc stdlib.sol, 618
			NULL
			.loc stdlib.sol, 619
			PUSH S3
			UNPAIR
			.loc stdlib.sol, 620
			UNPAIR
			POP S6
			.loc stdlib.sol, 621
			PUSHCONT {
				OVER
				ISNULL
				NOT
				OVER
				ISNULL
				NOT
				AND
			}
			PUSHCONT {
				.loc stdlib.sol, 622
				OVER
				FIRST
				OVER
				FIRST
				PUSH S8
				PUSH C3
				CALLX
				PUSHCONT {
					.loc stdlib.sol, 623
					BLKPUSH 2, 2
					UNPAIR
					POP S4
				}
				PUSHCONT {
					.loc stdlib.sol, 625
					PUSH2 S2, S0
					UNPAIR
					POP S3
				}
				IFELSE
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 627
			PUSHCONT {
				OVER
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 628
				BLKPUSH 2, 2
				UNPAIR
				POP S4
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 629
			PUSHCONT {
				DUP
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 630
				PUSH2 S2, S0
				UNPAIR
				POP S3
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 631
			DROP2
			CALLREF {
				.inline __stackReverse
			}
			.loc stdlib.sol, 632
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		WHILE
		.loc stdlib.sol, 634
		POP S2
		.loc stdlib.sol, 635
		INC
		RSHIFT 1
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 637
	DROP
	UNPAIR
	DROP
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __strstr, {
	.loc stdlib.sol, 498
	NULL
	.loc stdlib.sol, 499
	PUSH S2
	CTOS
	.loc stdlib.sol, 500
	PUSH S2
	CTOS
	.loc stdlib.sol, 501
	PUSHINT 0
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 502
		OVER2
		PUSHCONT {
			.loc stdlib.sol, 474
			OVER
			SBITS
			.loc stdlib.sol, 475
			OVER
			SBITS
			.loc stdlib.sol, 476
			FALSE ; decl return flag
			PUSHCONT {
				PUSH S3
				SEMPTY
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 477
				PUSH S2
				PUSHCONT {
					.loc stdlib.sol, 478
					PUSH S4
					SREFS
					PUSHCONT {
						BLKDROP 5
						FALSE
						PUSHINT 4
						RETALT
					}
					IFNOTJMP
					.loc stdlib.sol, 480
					PUSH S4
					LDREFRTOS
					XCPU S6, S6
					BLKDROP2 2, 1
					.loc stdlib.sol, 481
					SBITS
					POP S3
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 483
				OVER
				PUSHCONT {
					.loc stdlib.sol, 484
					PUSH S3
					LDREFRTOS
					XCPU S5, S5
					BLKDROP2 2, 1
					.loc stdlib.sol, 485
					SBITS
					POP S2
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 487
				BLKPUSH 2, 2
				MIN
				.loc stdlib.sol, 488
				PUSH2 S5, S0
				LDSLICEX
				POP S7
				.loc stdlib.sol, 489
				PUSH2 S5, S1
				LDSLICEX
				POP S7
				.loc stdlib.sol, 490
				SDEQ
				PUSHCONT {
					BLKDROP 6
					FALSE
					PUSHINT 4
					RETALT
				}
				IFNOTJMP
				.loc stdlib.sol, 492
				PUSH2 S3, S0
				SUB
				POP S4
				.loc stdlib.sol, 493
				PUSH S2
				SUBR
				POP S2
				.loc stdlib.sol, 0
			}
			WHILEBRK
			IFRET
			.loc stdlib.sol, 495
			BLKDROP 4
			TRUE
			.loc stdlib.sol, 473
		}
		CALLX
		.loc stdlib.sol, 0
		PUSHCONT {
			DROP
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 504
		PUSH S3
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 506
		PUSH S3
		SBITS
		PUSHCONT {
			.loc stdlib.sol, 507
			PUSH S3
			LDREFRTOS
			NIP
			POP S4
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 508
		PUSH S3
		LDU 8
		XCPU S5, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 509
		INC
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	EQINT 4
	IFRET
	BLKDROP 6
	.loc stdlib.sol, 511
	NULL
	.loc stdlib.sol, 0
}

.fragment __toLowerCase, {
	.loc stdlib.sol, 516
	.inline __createStringBuilder
	.loc stdlib.sol, 517
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 519
		GTINT 64
		OVER
		LESSINT 91
		AND
		PUSHCONT {
			.loc stdlib.sol, 520
			ADDCONST 32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 521
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 523
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __toUpperCase, {
	.loc stdlib.sol, 528
	.inline __createStringBuilder
	.loc stdlib.sol, 529
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 531
		GTINT 96
		OVER
		LESSINT 123
		AND
		PUSHCONT {
			.loc stdlib.sol, 532
			ADDCONST -32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 533
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 535
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __tonToGas, {
	.loc stdlib.sol, 28
	PUSHPOW2 16
	SWAP
	CALLREF {
		.inline __gasGasPrice
	}
	MULDIV
	.loc stdlib.sol, 0
}

.fragment __replayProtection, {
	.loc stdlib.sol, 22
	GETGLOB 3
	OVER
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 23
	DUP
	NOW
	PUSHINT 1000
	MUL
	PUSHINT 1800000
	ADD
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 24
	SETGLOB 3
	.loc stdlib.sol, 0
}

.fragment __exp, {
	.loc stdlib.sol, 44
	DUP2
	OR
	THROWIFNOT 69
	.loc stdlib.sol, 45
	PUSHINT 1
	.loc stdlib.sol, 46
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 47
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 48
			PUSH S2
			MUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 49
		PUSH2 S2, S2
		MUL
		POP S3
		.loc stdlib.sol, 50
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 52
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __qexp, {
	.loc stdlib.sol, 56
	DUP
	ISNAN
	DUP
	PUSHCONT {
		DROP
		BLKPUSH 2, 0
		ISNAN
		THROWIF 80
		EQINT 0
		PUSH S2
		ISNAN
		NOT
		AND
		DUP
		PUSHCONT {
			DROP
			PUSH2 S1, S1
			ISNAN
			THROWIF 80
			EQINT 0
		}
		IF
	}
	IFNOT
	PUSHCONT {
		DROP2
		PUSHNAN
	}
	IFJMP
	.loc stdlib.sol, 60
	DUP
	ISNAN
	THROWIF 80
	.loc stdlib.sol, 61
	PUSHINT 1
	.loc stdlib.sol, 62
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 63
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 64
			PUSH S2
			QMUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 65
		PUSH2 S2, S2
		QMUL
		POP S3
		.loc stdlib.sol, 66
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 68
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __stoi, {
	.loc stdlib.sol, 339
	CTOS
	.loc stdlib.sol, 340
	DUP
	SBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 341
		DROP
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 344
	DUP
	SBITS
	GTINT 7
	DUP
	PUSHCONT {
		DROP
		DUP
		PLDU 8
		EQINT 45
	}
	IF
	.loc stdlib.sol, 345
	DUP
	PUSHCONT {
		.loc stdlib.sol, 346
		OVER
		PUSHINT 8
		SDSKIPFIRST
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 348
	OVER
	SBITS
	GTINT 15
	DUP
	PUSHCONT {
		DROP
		OVER
		PLDU 16
		PUSHINT 12408
		EQUAL
	}
	IF
	.loc stdlib.sol, 349
	DUP
	PUSHCONT {
		.loc stdlib.sol, 350
		PUSH S2
		PUSHINT 16
		SDSKIPFIRST
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 352
	PUSHINT 0
	.loc stdlib.sol, 353
	PUSH S3
	SBITS
	RSHIFT 3
	.loc stdlib.sol, 354
	FALSE ; decl return flag
	ROLL 3
	PUSHCONT {
		.loc stdlib.sol, 355
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 356
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 357
			PUSH S4
			MULCONST 16
			POP S5
			.loc stdlib.sol, 358
			DUP
			GTINT 47
			OVER
			LESSINT 58
			AND
			PUSHCONT {
				.loc stdlib.sol, 359
				DUP
				ADDCONST -48
				PUSH S5
				ADD
				POP S5
				.loc stdlib.sol, 0
			}
			PUSHCONT {
				DUP
				GTINT 64
				OVER
				LESSINT 71
				AND
				PUSHCONT {
					.loc stdlib.sol, 361
					DUP
					ADDCONST -55
					PUSH S5
					ADD
					POP S5
					.loc stdlib.sol, 0
				}
				PUSHCONT {
					DUP
					GTINT 96
					OVER
					LESSINT 103
					AND
					PUSHCONT {
						.loc stdlib.sol, 363
						DUP
						ADDCONST -87
						PUSH S5
						ADD
						POP S5
						.loc stdlib.sol, 0
					}
					PUSHCONT {
						.loc stdlib.sol, 365
						BLKDROP 7
						NULL
						PUSHINT 4
						RETALT
						.loc stdlib.sol, 0
					}
					IFELSE
				}
				IFELSE
			}
			IFELSE
			DROP
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 369
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 370
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 371
			DUP
			LESSINT 48
			OVER
			GTINT 57
			OR
			PUSHCONT {
				BLKDROP 7
				NULL
				PUSHINT 4
				RETALT
			}
			IFJMP
			.loc stdlib.sol, 373
			PUSH S4
			MULCONST 10
			SWAP
			ADDCONST -48
			ADD
			POP S4
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	IFRET
	.loc stdlib.sol, 376
	DROP
	SWAP
	PUSHCONT {
		.loc stdlib.sol, 377
		NEGATE
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 378
	NIP
	.loc stdlib.sol, 0
}

.fragment __compareStrings, {
	.loc stdlib.sol, 426
	SWAP
	CTOS
	.loc stdlib.sol, 427
	SWAP
	CTOS
	.loc stdlib.sol, 428
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 429
		BLKPUSH 2, 2
		SDLEXCMP
		.loc stdlib.sol, 430
		DUP
		PUSHCONT {
			.loc stdlib.sol, 431
			BLKDROP2 3, 1
			PUSHINT 4
			RETALT
			.loc stdlib.sol, 0
		}
		IFJMP
		.loc stdlib.sol, 433
		DROP
		PUSH S2
		SREFS
		.loc stdlib.sol, 434
		PUSH S2
		SREFS
		.loc stdlib.sol, 435
		DUP2
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 437
		PUSH2 S0, S1
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT -1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 439
		ADD
		PUSHCONT {
			BLKDROP 3
			PUSHINT 0
			PUSHINT 4
			RETALT
		}
		IFNOTJMP
		.loc stdlib.sol, 441
		PUSH S2
		LDREFRTOS
		XCPU S4, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 442
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	IFRET
	.loc stdlib.sol, 444
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __strchr, {
	.loc stdlib.sol, 454
	NULL
	.loc stdlib.sol, 455
	PUSHINT 0
	.loc stdlib.sol, 456
	ROLL 3
	CTOS
	NULL
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S2
		SEMPTY
		NOT
	}
	PUSHCONT {
		PUSH S2
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 3
		XCPU2 S2, S1, S5
		.loc stdlib.sol, 457
		EQUAL
		PUSHCONT {
			XCHG S3
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 459
		PUSH S3
		INC
		POP S4
		.loc stdlib.sol, 0
	}
	WHILEBRK
	IFRET
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __strrchr, {
	.loc stdlib.sol, 463
	NULL
	.loc stdlib.sol, 464
	PUSHINT 0
	.loc stdlib.sol, 465
	ROLL 3
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S4
		.loc stdlib.sol, 466
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 467
			PUSH S2
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 468
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __stateInitHash, {
	.loc stdlib.sol, 540
	NEWC
	.loc stdlib.sol, 542
	STSLICECONST x020134
	.loc stdlib.sol, 554
	ROT
	STUR 16
	.loc stdlib.sol, 555
	STU 16
	.loc stdlib.sol, 557
	ROT
	STUR 256
	.loc stdlib.sol, 558
	STU 256
	.loc stdlib.sol, 559
	ENDC
	CTOS
	SHA256U
	.loc stdlib.sol, 0
}

.fragment __forwardFee, {
	.loc stdlib.sol, 563
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 564
	LDU 1
	SWAP
	.loc stdlib.sol, 565
	PUSHCONT {
		.loc stdlib.sol, 576
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 570
		LDU 3
		LDMSGADDR
		LDMSGADDR
		LDVARUINT16
		LDDICT
		LDVARUINT16
		BLKDROP2 6, 1
		.loc stdlib.sol, 574
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __importFee, {
	.loc stdlib.sol, 581
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 582
	LDU 2
	SWAP
	.loc stdlib.sol, 583
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 586
		LDMSGADDR
		LDMSGADDR
		BLKDROP2 2, 1
		.loc stdlib.sol, 587
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 589
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __qand, {
	.loc stdlib.sol, 650
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT 0
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT 0
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QAND
	}
	IFJMP
	.loc stdlib.sol, 654
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __qor, {
	.loc stdlib.sol, 658
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT -1
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT -1
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QOR
	}
	IFJMP
	.loc stdlib.sol, 662
	DROP2
	PUSHINT -1
	.loc stdlib.sol, 0
}

